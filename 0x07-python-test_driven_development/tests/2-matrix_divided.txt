==========================
1. Divide a matrix
==========================

Function matrix_divided
=====================

Function that divides all elements of a matrix.

-matrix must be a list of lists of integers or floats,
otherwise raise a TypeError exception with the message
matrix must be a matrix (list of lists) of integers/floats.
-Each row of the matrix must be of the same size, otherwise
raise a TypeError exception with the message Each row of the
matrix must have the same size.
-div must be a number (integer or float), otherwise raise a
TypeError exception with the message div must be a number.
-div canâ€™t be equal to 0, otherwise raise a ZeroDivisionError
exception with the message division by zero.
-All elements of the matrix should be divided by div, rounded
to 2 decimal places.
-Returns a new matrix

Import module:
======================

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

=====================

	>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 2))
	[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

	>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], -3))
	[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

	>>> print(matrix_divided([[1.5, 2, 3], [4, 5, 6]], 3))
	[[0.5, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> print(matrix_divided([[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]], 3))
	[[0.5, 0.83, 1.17], [1.5, 1.83, 2.17]]

    >>> print(matrix_divided([[1, 2], [4, 5]], 2))
    [[0.5, 1.0], [2.0, 2.5]]

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 2.5))
    [[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], -2.5))
    [[-0.4, -0.8, -1.2], [-1.6, -2.0, -2.4]]

    >>> print(matrix_divided([[-1, -2, -3], [-4, -5, -6]], 2.5))
    [[-0.4, -0.8, -1.2], [-1.6, -2.0, -2.4]]

    >>> print(matrix_divided([[True], [False]], 2))
    [[0.5], [0.0]]

	>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], float("inf")))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

	>>> print(matrix_divided([[0, 0, 0], [0, 0, 0]], 3))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    >>> print(matrix_divided([['1', 2, 3], [4, 5, 6]], 3))
    Traceback (most recent call last):
    ---
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]],0))
    Traceback (most recent call last):
    ---
    ZeroDivisionError: division by zero

    >>> print(matrix_divided([[1, 2], [4, 5, 6]], 3))
    Traceback (most recent call last):
    ---
    TypeError: Each row of the matrix must have the same size

    >>> print(matrix_divided([[1, 2, 3], [4, 5]], 3))
    Traceback (most recent call last):
    ---
    TypeError: Each row of the matrix must have the same size

    >>> print(matrix_divided([[1, 2, 3], [4, 5], [6]], 3))
    Traceback (most recent call last):
    ---
    TypeError: Each row of the matrix must have the same size

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], '3'))
    Traceback (most recent call last):
    ---
    TypeError: div must be a number

    >>> print(matrix_divided([[1, 2, 3], (4, 5, 6)], 3))
    Traceback (most recent call last):
    ---
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([], 3))
    Traceback (most recent call last):
    ---
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[], [], []], 3))
    Traceback (most recent call last):
    ---
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided(None, 3))
    Traceback (most recent call last):
    ---
    TypeError: object of type 'NoneType' has no len()

    >>> print(matrix_divided(True, 3))
    Traceback (most recent call last):
    ---
    TypeError: object of type 'bool' has no len()

    >>> print(matrix_divided([5 + 4j], 3))
    Traceback (most recent call last):
    ---
    TypeError: object of type 'complex' has no len()

    >>> print(matrix_divided([[1, 2], ["3", 4], {5, 6}], 3))
    Traceback (most recent call last):
    ---
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[1, 2], [3, [4 , 5]], [5, 6]], 3))
    Traceback (most recent call last):
    ---
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided([[1, 2], [3, (4 , 5)], [5, 6]], 3))
    Traceback (most recent call last):
    ---
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> print(matrix_divided({[1, 2], [3, 4], [5, 6]}, 3))
    Traceback (most recent call last):
    ---
    TypeError: unhashable type: 'list'

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 3, 2))
    Traceback (most recent call last):
    ---
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given

    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]]))
    Traceback (most recent call last):
    ---
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
