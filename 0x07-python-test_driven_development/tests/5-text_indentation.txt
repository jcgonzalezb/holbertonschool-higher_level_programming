==========================
4. Text indentation
==========================

Function text_indentation
=====================

Function that prints a text with 2 new lines after
each of these characters: ., ? and :.
-text must be a string, otherwise raise a TypeError
exception with the message text must be a string.
-There should be no space at the beginning or at
the end of each printed line.

Import module:
======================

	>>> text_indentation = __import__('5-text_indentation').text_indentation

=====================

    >>> text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit. \
    ... Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? \
    ... Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: \
    ... Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. \
    ... Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum \
    ... rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo \
    ... stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum \
    ... cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio \
    ... beatiorem! Iam ruinas videres""")
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    <BLANKLINE>
    Quonam modo?
    <BLANKLINE>
    Utrum igitur tibi litteram videor an totas paginas commovere?
    <BLANKLINE>
    Non autem hoc:
    <BLANKLINE>
    igitur ne illud quidem.
    <BLANKLINE>
    Fortasse id optimum, sed ubi illud:
    <BLANKLINE>
    Plus semper voluptatis?
    <BLANKLINE>
    Teneo, inquit, finem illi videri nihil dolere.
    <BLANKLINE>
    Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
    <BLANKLINE>
    Si id dicis, vicimus.
    <BLANKLINE>
    Inde sermone vario sex illa a Dipylo stadia confecimus.
    <BLANKLINE>
    Sin aliud quid voles, postea.
    <BLANKLINE>
    Quae animi affectio suum cuique tribuens atque hanc, quam dico.
    <BLANKLINE>
    Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

    >>> text_indentation("""""")

    >>> text_indentation(0)
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

    >>> text_indentation(-2.3)
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

    >>> text_indentation(1, 1)
    Traceback (most recent call last):
    ...
    TypeError: text_indentation() takes 1 positional argument but 2 were given

    >>> text_indentation(nan)
    Traceback (most recent call last):
    ...
    NameError: name 'nan' is not defined

    >>> text_indentation(float(inf))
    Traceback (most recent call last):
    ...
    NameError: name 'inf' is not defined

    >>> text_indentation("""text""")
    text

    >>> text_indentation("""  text  """)
    text

    >>> text_indentation(""".:?""")
    .
    <BLANKLINE>
    :
    <BLANKLINE>
    ?
    <BLANKLINE>

    >>> text_indentation("""text.text:text?text""")
    text.
    <BLANKLINE>
    text:
    <BLANKLINE>
    text?
    <BLANKLINE>
    text

    >>> text_indentation("""  text  .  text  :  text  ?  text  """)
    text  .
    <BLANKLINE>
    text  :
    <BLANKLINE>
    text  ?
    <BLANKLINE>
    text

    >>> text_indentation("""  text  1  .  text  2  :  text  3  ?  text  4  """)
    text  1  .
    <BLANKLINE>
    text  2  :
    <BLANKLINE>
    text  3  ?
    <BLANKLINE>
    text  4

    >>> text_indentation("""  text  \n  .  text  :  text  ?  text""")
    text
    .
    <BLANKLINE>
    text  :
    <BLANKLINE>
    text  ?
    <BLANKLINE>
    text

    >>> text_indentation(""" """)


    >>> text_indentation(True)
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

    >>> text_indentation({212})
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

    >>> text_indentation("This is a test")
    This is a test

    >>> text_indentation("""This is a test:""")
    This is a test:
    <BLANKLINE>

    >>> text_indentation(5 + 3j)
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

    >>> text_indentation([2, 3])
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

    >>> text_indentation(None)
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

    >>> text_indentation()
    Traceback (most recent call last):
    ...
    TypeError: text_indentation() missing 1 required positional argument: 'text'

